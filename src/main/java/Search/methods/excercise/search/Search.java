/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package pid.exercise.search;

/**
 * The purpose of this class is to provide static methods for searching integer arrays and does not need to be
 * instantiated.
 */
public class Search {
    public static int linearSearch(int[] array, int value) {
        // linear search implementation
        for(int i = 0; i < array.length; i++) {
            if(array[i] == value) {
                return i;
            }
        }
        return -1;
    }

    public static int binarySearch(int[] array, int value) {
        int n = array.length;
        int left = 0;
        int right = n - 1;
        int mid = 0;
        // iterative binary search implementation
        for( int i = 0; i < n; i++) {
            while(left <= right) {
                mid = left + (right - left) / 2;
                if(array[mid] == value) {
                    return mid;
                }
                if(array[mid] < value) {
                    left = mid + 1;
                } else if(array[mid] > value) {
                    right = mid - 1;
                } 
            }
        }
        return -1;
    }

    public static int binarySearchRecursive(int[] array, int value) {
        return binarySearchRecursiveHelper(array, value, 0, array.length);
    }

    private static int binarySearchRecursiveHelper(int[] array, int value, int lower, int upper) {
        int middle = (lower + upper) / 2;
        if (lower == upper) {
            return -1;
        }

        if (value < array[middle]) {
            return binarySearchRecursiveHelper(array, value, lower, middle);
        } else if (value > array[middle]) {
            return binarySearchRecursiveHelper(array, value, middle + 1, upper);
        } else {
            return middle;
        }
    }

}
